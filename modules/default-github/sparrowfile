#exit(0);

my $user = config()<user>;

my $directory = "/data/test/{$user}";

my $scm = config()<scm>;

my $project = config()<project>;

user $user;

directory-delete $directory;

directory $directory, %( 
  owner => $user,
  group => $user

);

bash "rm -rf /home/$user/.perl6", %(
  description => "remove ~/.perl6 for user $user",
  user => $user
);

git-scm $scm, %( 
  to => $directory, 
  user => $user,
);

bash "cd {$directory} && git log --name-status HEAD^..HEAD", %(
  description => "last commit"
);

my $dir = $*CWD;

if "{$directory}/.rakudist/sparrowfile".IO ~~ :f {
  say "execute custom scenario from .rakudist/sparrowfile";
  bash "mkdir -p {$directory}/.rakudist/conf && cp -v {%*ENV<SP6_CONFIG>}  {$directory}/.rakudist/conf/", %(
    description => "copy configuartion file",
  );
  # custom installation logic, for example external libraries
  chdir "$directory/.rakudist/";
  EVALFILE "sparrowfile";
  chdir $dir;
}

if "{$directory}/.rakudist/depends.raku".IO ~~ :f {
  say "install Raku modules from .rakudist/depends.raku file";
  # install Raku modules from depends.raku file
  for "{$directory}/.rakudist/depends.raku".IO.lines -> $line {
    next unless $line ~~ /\S/;
    next if $line ~~ /^^ \s* '#' /;
    my @params = $line.split(/\s+/);
    my $module = @params.shift;
    zef $module, %(
      user => $user,
      notest => @params.Set{'notest'} ?? True !! False
    );
  }
}

bash "cd {$directory} && ls -l";

if os() eq 'alpine' {

  # this is needed for alpine rakudo installation
  unless "/bin/zef".IO ~~ :e {
    copy "/opt/rakudo-pkg/share/perl6/core/bin/zef", "/bin/zef"
  }

  # this is needed for alpine rakudo installation
  unless "/bin/perl6".IO ~~ :e {
    copy "/opt/rakudo-pkg/bin/perl6", "/bin/perl6"
  }


}

bash "cd {$directory} && zef install .", %(
  description => "zef install .",
  user => $user,
  debug => True
);

