use Sparky;
use Data::Dump;

my $rakudo-repo-dir = "{%*ENV<HOME>}/projects/rakudo-issues/rakudo";
my $rakudo-issues-dir = "{%*ENV<HOME>}/projects/rakudo-issues/cache";

directory-create $rakudo-repo-dir;
directory-create $rakudo-issues-dir;

git-scm "https://github.com/rakudo/rakudo.git", %(
  to => $rakudo-repo-dir
);
 
chdir $rakudo-repo-dir;

my $sha = qx{git rev-parse HEAD}.chomp;

say "rakudo sha: $sha";

my $dbh = get-dbh();

my $sth = $dbh.prepare("
  SELECT *
  FROM 
    builds 
  where 
    description LIKE '%issue-%' 
    AND
    ( state == 1 OR state == -1 )
  order by id desc 
  limit 1000"
);

$sth.execute();

my @r = $sth.allrows(:array-of-hash);

$sth.finish;

$dbh.dispose;

#say Dump(@r);

=begin comment

  {
    description => "RakuPlay: [issue-4034]. Rakudo version: [2020.10]. OS: [debian]".Str,
    dt          => "2020-11-17 15:33:45".Str,
    id          => 1189.Int,
    key         => "ajtpomqfciglyrshuzev20013".Str,
    project     => "RakuPlay-2".Str,
    state       => -1.Int,
  },

=end comment

my %seen;

my @stat;
for @r -> $i {

  $i<description> ~~ /'issue-' (\d+)/ or next;
  
  my $iss-num = "$0";

  if ! %seen{$iss-num}++ {

    if "{$rakudo-issues-dir}/{$sha}/{$iss-num}".IO ~~ :d {
      say "issue: $iss-num is already done (cache exists)";
      push @stat, %(
        iss-num => $iss-num,
        build-id => $i<id>,
        state => $i<state>,
        project => $i<project>,
        dt => $i<dt>,
        description => $i<description>,
      );
    } else {
      queue-build($rakudo-issues-dir,$sha,$iss-num,$i<project>,$i<key>);
    }
  }

}

build-report($sha, @stat);

sub queue-build ($rakudo-issues-dir, $rakudo_version, $iss-num, $project, $key ) {

  my $worker-num = (1 .. 3).pick(1);

  my $user = "rkp-{$worker-num}-{$rakudo_version.chop(32)}";

  my $rnd = ('a' .. 'z').pick(20).join('');

  my $id = "{$rnd}{$*PID}-{$rakudo_version}-{$iss-num}";

  my $effective-dir = "{%*ENV<HOME>}/projects/RakuPlay/.cache/{$id}";

  mkdir "{$effective-dir}/files";

  my $root = %*ENV<SPARKY_ROOT> || %*ENV<HOME> ~ '/.sparky/projects';
  
  return unless "$root/../work/$project/.triggers/$key".IO ~~ :f;
  
  my %trigger = EVALFILE "$root/../work/$project/.triggers/$key";
  
  my $build-dir = %trigger<cwd>;
  
  return unless "{$build-dir}".IO ~~ :d;

  return unless "{$build-dir}/files/code.raku".IO ~~ :f;

  return unless "{$build-dir}/config.pl6".IO ~~ :f;

  copy "{%*ENV<HOME>}/projects/RakuPlay/runners/default/sparrowfile", "{$effective-dir}/sparrowfile";

  copy "{$build-dir}/files/code.raku", "{$effective-dir}/files/code.raku";
 
  copy "{$build-dir}/files/Rakufile", "{$effective-dir}/files/Rakufile" if "{$build-dir}/files/Rakufile".IO ~~ :f;
  
  %trigger<cwd> = $effective-dir;
  
  %trigger<description> = "RakuPlay: [issue-{$iss-num}]. Rakudo version: [$rakudo_version]. OS: [debian]";

  my %conf = EVALFILE "{$build-dir}/config.pl6";

  %conf<user> = $user;
  
  %conf<rakudo_version> = $rakudo_version;
  
  spurt "$effective-dir/config.pl6", %conf.perl;

  my $sparky-dir = "{%*ENV<HOME>}/projects/RakuDist/sparky/RakuPlay-{$worker-num}";

  mkdir "{$sparky-dir}/.triggers/";

  spurt "{$sparky-dir}/sparrowfile", "# dummy file, generated by rakuplay";

  spurt "{$sparky-dir}/.triggers/$id", %trigger.perl;

  mkdir "{$rakudo-issues-dir}/{$rakudo_version}/{$iss-num}";

  say "queue build, issue: $iss-num";

}

sub build-report ($rakudo_version, @stat) {
  
  say "build report ...";

  my $fh = "{%*ENV<HOME>}/projects/RakuDist/sparky/rakudo-issues/report.html".IO.open: :w;

  $fh.say("<head><title>RakuPlay Rakudo Issues</title></head>");
  $fh.say("<body>\n<h1>RakuPlay Rakudo Issues</h1>");

  for @stat.sort({ .<iss-num> }).reverse -> $i {
    $fh.print: "GH Issue: #<a target='_blank' href='https://github.com/rakudo/rakudo/issues/{$i<iss-num>}'>{$i<iss-num>}</a> | ";
    $fh.print: "RP: #<a target='_blank' href='http://rakudist.raku.org/sparky/report/{$i<project>}/{$i<build-id>}'>{$i<build-id>}</a> [";
    $fh.print: ($i<state> == 1 ?? "OK" !! "NOT-OK" );
    $fh.print: "]";
    $fh.print: " | {$i<description>}";
    $fh.print: " | at {$i<dt>}<br>\n";
    
  }

  $fh.print: "</body>\n";
  $fh.close;

  say "report saved to {%*ENV<HOME>}/projects/RakuDist/sparky/rakudo-issues/report.html";
}
