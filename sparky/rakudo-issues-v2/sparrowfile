use Sparky;
use Data::Dump;

my $rakudo-repo-dir = "{%*ENV<HOME>}/projects/rakudo-issues/rakudo";
my $rakudo-issues-dir = "{%*ENV<HOME>}/projects/rakudo-issues/cache";

directory-create $rakudo-repo-dir;
directory-create $rakudo-issues-dir;

git-scm "https://github.com/rakudo/rakudo.git", %(
  to => $rakudo-repo-dir
);
 
chdir $rakudo-repo-dir;

my $sha = qx{git rev-parse HEAD}.chomp;

bash "curl -f -o /dev/null -s -D - https://whateverable.6lang.org/{$sha}", %(
   description => "check if {$sha.chop(32)} is available",
   debug => 1
);

say "rakudo sha: $sha";

my $dbh = get-dbh();

my $sth = $dbh.prepare("
  SELECT *
  FROM 
    builds 
  where 
    description LIKE '%issue-%' 
    AND
    ( state == 1 OR state == -1 )
  order by id desc 
  limit 1000"
);

$sth.execute();

my @r = $sth.allrows(:array-of-hash);

$sth.finish;

$dbh.dispose;

#say Dump(@r);

=begin comment

  {
    description => "RakuPlay: [issue-4034]. Rakudo version: [2020.10]. OS: [debian]".Str,
    dt          => "2020-11-17 15:33:45".Str,
    id          => 1189.Int,
    key         => "ajtpomqfciglyrshuzev20013".Str,
    project     => "RakuPlay-2".Str,
    state       => -1.Int,
  },

=end comment

my %seen;

for @r -> $i {

  $i<description> ~~ /'issue-' (\d+)/ or next;
  
  my $iss-num = "$0";

  if ! %seen{$iss-num}++ {

    if "{$rakudo-issues-dir}/{$sha}/{$iss-num}".IO ~~ :d  {
      say "issue: $iss-num is already done (cache exists)";
    } else {
      queue-build($rakudo-issues-dir,$sha,$iss-num);
    }

  }

}

sub queue-build ($rakudo-issues-dir, $rakudo_version, $iss-num ) {

  return unless "{%*ENV<HOME>}/projects/RakuPlay/issues/$iss-num".IO ~~ :d;

  my $worker-num = (1 .. 3).pick(1);

  my $user = "rkp-{$worker-num}-{$rakudo_version.chop(32)}";

  my $rnd = ('a' .. 'z').pick(20).join('');

  my $id = "{$rnd}{$*PID}-{$rakudo_version}-{$iss-num}";

  my $effective-dir = "{%*ENV<HOME>}/projects/RakuPlay/.cache/{$id}";

  mkdir "{$effective-dir}/files";

  copy "{%*ENV<HOME>}/projects/RakuPlay/runners/default/sparrowfile", "{$effective-dir}/sparrowfile";

  "{$effective-dir}/files/code.raku".IO.spurt("use Sparrow6::DSL; task-run '$iss-num';");
 
  "{$effective-dir}/files/Rakufile".IO.spurt("Sparrow6 --/test");
  
  shell("cp -rv {%*ENV<HOME>}/projects/RakuPlay/issues/$iss-num {$effective-dir}/files");

  my %trigger = Hash.new;
  
  %trigger<cwd> = $effective-dir;

  %trigger<sparrowdo> =  %( 
    conf => 'config.pl6', 
    docker => 'debian-rakudist', 
    bootstrap => False, 
    no_index_update => False, 
    no_sudo => True,
  );

  %trigger<description> = "RakuPlay: [issue-{$iss-num}]. Rakudo version: [$rakudo_version]. OS: [debian]";

  my %conf = Hash.new;

  %conf<user> = $user;
  
  %conf<rakudo_version> = $rakudo_version;
  
  spurt "$effective-dir/config.pl6", %conf.perl;

  my $sparky-dir = "{%*ENV<HOME>}/projects/RakuDist/sparky/RakuPlay-{$worker-num}";

  mkdir "{$sparky-dir}/.triggers/";

  spurt "{$sparky-dir}/sparrowfile", "# dummy file, generated by rakuplay";

  spurt "{$sparky-dir}/.triggers/$id", %trigger.perl;

  mkdir "{$rakudo-issues-dir}/{$rakudo_version}/{$iss-num}";

  say "queue build, issue: $iss-num";

}

